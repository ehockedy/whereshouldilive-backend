/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.5/userguide/building_java_projects.html
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
    id "org.openapi.generator" version "6.6.0"
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

// Use if building for AWS Lambda
def isServerless = project.hasProperty("serverless")

dependencies {
    implementation 'com.google.guava:guava:31.0.1-jre'
    implementation 'com.googlecode.json-simple:json-simple:1.1.1'
    implementation ('org.springframework.boot:spring-boot-starter-web:3.1.3') {
        if (isServerless) {
            exclude group: 'org.springframework.boot', module: 'spring-boot-starter-tomcat'
        }
    }
    implementation 'com.google.maps:google-maps-services:2.1.0'
    implementation 'com.amazonaws.serverless:aws-serverless-java-container-springboot3:[2.0-SNAPSHOT,)'

    // Swagger code gen deps - see pom.xml in generated dir
    implementation 'org.openapitools:openapi-generator:7.0.0'
    implementation 'io.swagger.core.v3:swagger-annotations-jakarta:2.2.9'
    implementation 'jakarta.validation:jakarta.validation-api:3.0.2'
    implementation 'jakarta.xml.bind:jakarta.xml.bind-api:4.0.0'
    implementation 'org.openapitools:jackson-databind-nullable:0.2.6'
}

application {
    // Define the main class for the application.
    if (isServerless) {
        // Main class for AWS Lambda
        mainClass = 'wsil.StreamLambdaHandler'
    } else {
        mainClass = 'wsil.WhereShouldILive'
    }
}

compileJava {
  dependsOn {
    tasks.openApiGenerate
  }
  sourceCompatibility = '17'
  targetCompatibility = '17'
}

sourceSets {
   main {
      java {
         srcDir "${buildDir}/swagger-code-wsil/src/main/java"
      }
   }
}

openApiGenerate {
    generatorName.set("java")
    inputSpec.set("$rootDir/wsil-shared/wsil.yaml")
    outputDir.set("$buildDir/swagger-code-wsil")
    generatorName.set("spring")
    apiPackage.set("openapi.gen.api")
    modelPackage.set("openapi.gen.model")
    generateAliasAsModel.set(true) // Generate simple array definitions
    configOptions.set([
        dateLibrary: "java8",
        useJakartaEe: "true", // Spring 3 not compatiable with javax
        delegatePattern: "true"  // Only generate api interface and model
    ])
}

task buildZip(type: Zip) {
    into('lib') {
        from(jar)
        from(configurations.runtimeClasspath)
    }
}
